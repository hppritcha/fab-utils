
Instructions for building and running DOE mini app Nekbone.
For additional information see internal Mini Apps wiki.

1. Download Nekbone from
   https://cesar.mcs.anl.gov/content/software/thermal_hydraulics.  You
   must register to get a copy of the source code.

2. There is a top-level readme.pdf with build and run instructions.

3. Load necessary PrgEnv module, set PATH and LD_LIBRARY_PATH and set recommended envrionment variables,
   e.g. for OMPI, etc.

4. Modify make scipt makenek. a) is necessary, b) depends on which compiler is used.

   > cd test/example1

   a) Set source directory to where the Nekbone source was downloaded, e.g.

   # source path 
   #SOURCE_ROOT="$HOME/nekbone-3.0/src" 
   SOURCE_ROOT="<path-to-miniapp>/nekbone-3.1/src"

   b) When using Intel and building for KNL, specify automatic cpu dispatch
      to allow the executable to be run on KNL and non-KNL.

   #F77="mpif77"
   F77="mpif77 -qopenmp -axMIC-AVX512"

   #CC="mpicc"
   CC="mpicc -qopenmp -axMIC-AVX512"

5. Modify SIZE file. Increase the max nranks from 10 to 8192 to allow more flexibility
   in how to run the app later.

   C     parameter (lp = 10)                     ! max number of processors
         parameter (lp = 8192)                   ! max number of processors

6. > make clean
   > ./makenek ex1

   Creates an executable called nekbone in the same directory.

7. Now build other apps and run the app run script run_minapps found in the same directory
   as these notes. For run instructions see comments in the script itself.

   Alternatively, a few suggested launch options follow. For each example,
   the number of nodes used can be varied depending on whether XEON or KNL nodes are used.
   The problem is built into the executable and there are no app parameters to provide
   or vary. Nekbone is a single-threaded application and aprun launch parameters can
   easily be derived from the srun examples.

   The input deck has to be copied into the run directory if it is not there yet
   a)
   > cp data.rea .

   a) Various job sizes
   > srun -n 4 -N 2 --exclusive <path/exec> ex1

   > srun -n 16 -N 2 --exclusive <path/exec> ex1

   > srun -n 96 -N 4 --ntasks-per-node=24 --hint=nomultithread --exclusive <path/exec> ex1

   > srun -n 128 -N 2 --exclusive <path/exec> ex1

   > srun -n 216 --exclusive <path/exec> ex1

   b) Suitable for KNL systems
   > srun -n 2048 --ntasks-per-node=64 --hint=nomultithread --exclusive <path/exec> ex1

   > srun -n 8192 --hint=nomultithread --exclusive <path/exec> ex1

8. Before terminating, the app prints
   " Exitting...."

9. A performance summary is printed just before termination, e.g.
   nelt =      50, np =      8192, nx1 =      10, elements =    409600
   Tot MFlops =   0.0000E+00, MFlops      =   0.0000E+00
   Setup Flop =   6.9500E+08, Solver Flop =   7.5750E+07
   Solve Time =   0.0000E+00
   Avg MFlops =   0.0000E+00
    Exitting....

